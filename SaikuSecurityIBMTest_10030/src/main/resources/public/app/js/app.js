/**
 *
 * @author Geppetto Generated Code</br>
 * Date Created: </br>
 * @since  </br>
   build:   </p>
 *
 * code was generated by the Geppetto System </br>
 * Geppetto system Copyright - NewPortBay LLC </br>
 * The generated code is free to use by anyone</p>
 *
 *
 *
*/

var app = angular.module('SaikuSecurityIBMTest', ['ngRoute','ui.bootstrap','facebook','ngCookies','rzModule']);

   // configure our routes
   app.config(['$routeProvider','FacebookProvider',function($routeProvider,FacebookProvider) {
       $routeProvider
            .when('/login', {
                         templateUrl : 'app/views/en/login-en.html',
          controller: 'LoginCtrl'
                     })

            .when('/login-success', {
                         controller: 'LoginCtrlSuccess'
                         ,template: ' '
                     })

            .when('/landing_page-en', {
                         templateUrl : 'app/views/en/landing_page-en.html'
                     })

            .when('/app_level', {
                         controller: 'AplicationLevelCtrl', cache: false
                         ,template: ' '
                     })
            .when('/home', {
                 		templateUrl : 'app/views/en/home.html',
                		controller : 'HomeCtrl',
                		allow:'ROLE_ADMIN,ROLE_USER'
                	})
            	.when('/report', {
                		templateUrl : 'app/views/en/embed/test.html',
                		controller : 'EmbedCtrl'
                		//controller : 'EmbedCtrlDhina'
                	})
                	.when('/forReport', {
                		templateUrl : 'app/views/en/forReport.html',
                		controller : 'forReportCtrl',
                	})
                	.when('/admin', {
                		templateUrl : 'app/views/en/admin.html',
                		allow:'ROLE_ADMIN'
                	})
                	.when('/empty', {
                		templateUrl : 'app/views/en/empty.html',
                		controller : 'Admincrtl'
                	}).when('/error', {
                		templateUrl : 'app/views/en/error.html',
                	}).when('/logout',{
                	templateUrl : 'app/views/en/login-en.html',
                        controller: 'LogoutCtrl'
                	})

          .otherwise('app_level');

      FacebookProvider.init('1619632164961533');
   }]).run([ "$log","$rootScope", "$location", function($log,$rootScope, $location) {
	   $log.log("Starting IBM Application");
	   var self = this;
	   //self.isLoggedIn = true;
	   //$rootScope.userData={};
	   //self.project = {};
	
	   self.hasRole = function(role) {
	    if (!role) {
	     return true;
	    }
	    console.log('$rootScope.userData.role-----5432----------', $rootScope.userData);
	    
	    if(!angular.equals(undefined, $rootScope.userData)){
	    console.log('Empty checking the value =>',angular.toJson($rootScope.userData));
	    var test = $rootScope.userData.role[i].authority; 
	    console.log('roleList Of current User ',angular.toJson(test));
	    for ( var idx in test) {
	     console.log('inside the for loop idx vwluae',angular.toJson(idx));
	     console.log('inside the for loop of authority value',angular.toJson(test));
	     i++;
	     console.log('role is data =>',angular.toJson(role));
	     var index = role
	       .indexOf(test);
	     console.log('inside for loop index value =>',angular.toJson(index));
	     $log.log("index: ", index);
	     if (index >= 0) {
	      return true;
	     }
	    }
	   }else{ return false;} 
	    if(angular.equals({}, $rootScope.userData) && index<0 ){
	    	return false;
	    }
	   };
	   
	   //
	   $rootScope.duplic = function(role) {
		   
		    console.log("object from server side ROLE--",role);
		    console.log("$rootScope data Inside $%^&*()",$rootScope.userData);
		      var nam = $rootScope.userData;
		 console.log('***************************************************** username',nam.username);
		    for(var i=0;i<$rootScope.userData.authorities.length;i++){
		    	console.log('$rootScope.userData.authorities.length data',angular.toJson($rootScope.userData.authorities[i].authority));
		    }
		    if (!role) {
		     return true;
		    }
		    var i= 0;
		    console.log('role----------------',role);
		    console.log('$rootScop(((((((((((((((((((',$rootScope.role);
		    console.log('$rootScope.userData.role',angular.equals({}, $rootScope.userData));
		    
		    if(!angular.equals({}, $rootScope.userData)){
		    console.log('Empty checking the value =>',$rootScope.userData);
		  console.log('self.userData.role[0].authority',$rootScope.userData.authorities[0].authority);
		    $rootScope.roleListOfCurrentUser = angular.copy($rootScope.userData.authorities[0].authority);/*.authority;*/ 
		    console.log("roleListOfCurrentUser------",$rootScope.roleListOfCurrentUser);
		    
		    var splitname = $rootScope.roleListOfCurrentUser;//.split(',');
		    console.log("splitname",splitname);
		   
		    console.log('roleList Of current User ',angular.toJson(splitname));
		    for ( var idx in splitname) {
		     console.log('inside the for loop idx vwluae',angular.toJson(idx));
		     console.log('inside the for loop of authority value',splitname+"$rootScope.role===="+$rootScope.role);//angular.toJson(roleListOfCurrentUser));
		     i++;
		     console.log('role is data =>',angular.toJson(role));
		     var index =  $rootScope.role .indexOf(splitname);
		     console.log('inside for loop index value =>',angular.toJson(index));
		     $log.log("index: ", index);
		     
		    console.log("killer---length----",splitname.length);
		     if (index >= 0) {
		    	 console.log("with--length----",splitname);
		    	 var tf=$rootScope.routeChM(true);
		      return tf;
		     //}
		   }else{ 
			   console.log("--no userData from server------",$rootScope.userData);
			   var tf= $rootScope.routeChM(false);
			   return tf;
		   }
		     //end of for loop finished
		}
		    }
		    //down if loop finished
		    if(angular.equals({}, $rootScope.userData) && index<0 ){
		    	var tf= $rootScope.routeChM(false);
				   return tf;
		    }
  };
	   /**
	    * Listening the root changes
	    */
	   $rootScope.$on('$routeChangeStart', function(ev, next, current) {
	    console.log('When the route changes happened');
	    
	    /**
	     * Not considering public pages
	     */
	    console.log("---------------",next.hasRole);
	    if (next.hasRole) {
	     alert("No role has been associated.. progressing..")
	     $log.log("No role has been associated.. progressing..");
	     return;
	    } 
	    console.log('next.allow data =>',angular.toJson(next.allow));
		   $rootScope.role= next.allow;
		   
	   $rootScope.routeChM = function(tf){
		   console.log('uiiuhyiuhy',tf)
		   
		   $rootScope.adimnbutton=true;
		   if(tf) {
			   
			    $log.log("user is unauthorized!");
			    $log.log("Un authorized access!",$rootScope.roleListOfCurrentUser);
			    var foradminbtn = $rootScope.role.split(',')[0];
			    var forusebtn = $rootScope.role.split(',')[1]; 
			    $log.log(" foradminbtn !",foradminbtn);
			    $log.log("forusebtn  !",forusebtn);
			    
			    if((forusebtn == $rootScope.roleListOfCurrentUser)){
			    	console.log("$rootScope.roleListOfCurrentUser----inif--",$rootScope.roleListOfCurrentUser)
			    	$rootScope.adimnbutton=false;
			    }
			    
			    //console.log('self.hasRole(next.allow)',angular.toJson(self.hasRole(next.allow)));
			    $location.path("/home");
			   }
		    
	   } 
	 /* if (!self.hasRole(next.allow)) {
	    $log.log("user is unauthorized!");
	    $log.log("Un authorized access!");
	    //console.log('self.hasRole(next.allow)',angular.toJson(self.hasRole(next.allow)));
	    $location.path("/login");
	   }*/
	  });
	    
	   
	   
	  }]);

